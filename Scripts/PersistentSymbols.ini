// automatically saved persistent symbols:
persistent extern user INDEX con_iLastLines=(INDEX)5;
tmp_af[0]=(FLOAT)0;
tmp_af[1]=(FLOAT)0;
tmp_af[2]=(FLOAT)0;
tmp_af[3]=(FLOAT)0;
tmp_af[4]=(FLOAT)0;
tmp_af[5]=(FLOAT)0;
tmp_af[6]=(FLOAT)0;
tmp_af[7]=(FLOAT)0;
tmp_af[8]=(FLOAT)0;
tmp_af[9]=(FLOAT)0;
tmp_ai[0]=(INDEX)0;
tmp_ai[1]=(INDEX)0;
tmp_ai[2]=(INDEX)0;
tmp_ai[3]=(INDEX)0;
tmp_ai[4]=(INDEX)0;
tmp_ai[5]=(INDEX)0;
tmp_ai[6]=(INDEX)0;
tmp_ai[7]=(INDEX)0;
tmp_ai[8]=(INDEX)0;
tmp_ai[9]=(INDEX)0;
persistent extern user INDEX tmp_i=(INDEX)0;
persistent extern user FLOAT tmp_fAdd=(FLOAT)0;
persistent extern user INDEX inp_bSDLPermitCtrlG=(INDEX)1;
persistent extern user INDEX inp_bSDLGrabInput=(INDEX)1;
persistent extern user INDEX fil_bPreferZips=(INDEX)0;
persistent extern user INDEX ogl_bUseCompiledVertexArrays=(INDEX)101;
persistent extern user INDEX ogl_bExclusive=(INDEX)1;
persistent extern user INDEX ogl_bAllowQuadArrays=(INDEX)0;
persistent extern user INDEX ogl_iTextureCompressionType=(INDEX)1;
persistent extern user INDEX ogl_iMaxBurstSize=(INDEX)0;
persistent extern user INDEX ogl_bGrabDepthBuffer=(INDEX)0;
persistent extern user INDEX ogl_iFinish=(INDEX)1;
persistent extern user INDEX ogl_iTBufferEffect=(INDEX)0;
persistent extern user INDEX ogl_iTBufferSamples=(INDEX)2;
persistent extern user INDEX ogl_bTruformLinearNormals=(INDEX)1;
persistent extern user INDEX ogl_bAlternateClipPlane=(INDEX)0;
persistent extern user INDEX d3d_bUseHardwareTnL=(INDEX)1;
persistent extern user INDEX d3d_iMaxBurstSize=(INDEX)0;
persistent extern user INDEX d3d_iVertexBuffersSize=(INDEX)1024;
persistent extern user INDEX d3d_iVertexRangeTreshold=(INDEX)99;
persistent extern user INDEX d3d_bAlternateDepthReads=(INDEX)0;
persistent extern user INDEX d3d_bOptimizeVertexBuffers=(INDEX)1;
persistent extern user INDEX d3d_iFinish=(INDEX)0;
persistent extern user INDEX gap_iUseTextureUnits=(INDEX)4;
persistent extern user INDEX gap_iTextureFiltering=(INDEX)21;
persistent extern user INDEX gap_iTextureAnisotropy=(INDEX)1;
persistent extern user FLOAT gap_fTextureLODBias=(FLOAT)0;
persistent extern user INDEX gap_bAllowGrayTextures=(INDEX)1;
persistent extern user INDEX gap_bAllowSingleMipmap=(INDEX)1;
persistent extern user INDEX gap_bOptimizeStateChanges=(INDEX)1;
persistent extern user INDEX gap_iOptimizeDepthReads=(INDEX)1;
persistent extern user INDEX gap_iOptimizeClipping=(INDEX)2;
persistent extern user INDEX gap_iSwapInterval=(INDEX)0;
persistent extern user INDEX gap_iRefreshRate=(INDEX)0;
persistent extern user INDEX gap_iDithering=(INDEX)2;
persistent extern user INDEX gap_bForceTruform=(INDEX)0;
persistent extern user INDEX gap_iTruformLevel=(INDEX)0;
persistent extern user INDEX gap_iDepthBits=(INDEX)16;
persistent extern user INDEX gap_iStencilBits=(INDEX)0;
persistent extern user FLOAT mdl_fLODMul=(FLOAT)1;
persistent extern user FLOAT mdl_fLODAdd=(FLOAT)0;
persistent extern user INDEX mdl_iLODDisappear=(INDEX)1;
persistent extern user INDEX mdl_bRenderDetail=(INDEX)1;
persistent extern user INDEX mdl_bRenderSpecular=(INDEX)1;
persistent extern user INDEX mdl_bRenderReflection=(INDEX)1;
persistent extern user INDEX mdl_bAllowOverbright=(INDEX)1;
persistent extern user INDEX mdl_bFineQuality=(INDEX)1;
persistent extern user INDEX mdl_iShadowQuality=(INDEX)1;
persistent extern user FLOAT tex_fNormalSize=(FLOAT)9;
persistent extern user FLOAT gfx_tmProbeDecay=(FLOAT)30;
persistent extern user INDEX gfx_iProbeSize=(INDEX)256;
persistent extern user INDEX gfx_bClearScreen=(INDEX)0;
persistent extern user INDEX gfx_bDisableMultiMonSupport=(INDEX)1;
persistent extern user INDEX gfx_bDisableWindowsKeys=(INDEX)1;
persistent extern user INDEX gfx_bDecoratedText=(INDEX)1;
persistent extern user INDEX tex_iNormalQuality=(INDEX)20;
persistent extern user INDEX tex_iAnimationQuality=(INDEX)11;
persistent extern user INDEX tex_iNormalSize=(INDEX)9;
persistent extern user INDEX tex_iAnimationSize=(INDEX)7;
persistent extern user INDEX tex_iEffectSize=(INDEX)7;
persistent extern user INDEX tex_bFineEffect=(INDEX)1;
persistent extern user INDEX tex_bFineFog=(INDEX)1;
persistent extern user INDEX tex_iFogSize=(INDEX)7;
persistent extern user INDEX tex_bCompressAlphaChannel=(INDEX)0;
persistent extern user INDEX tex_bAlternateCompression=(INDEX)0;
persistent extern user INDEX tex_bDynamicMipmaps=(INDEX)0;
persistent extern user INDEX tex_iDithering=(INDEX)10;
persistent extern user INDEX tex_iFiltering=(INDEX)-5;
persistent extern user INDEX tex_iEffectFiltering=(INDEX)5;
persistent extern user INDEX tex_bProgressiveFilter=(INDEX)1;
persistent extern user INDEX shd_iStaticSize=(INDEX)8;
persistent extern user INDEX shd_iDynamicSize=(INDEX)8;
persistent extern user INDEX shd_bFineQuality=(INDEX)0;
persistent extern user INDEX shd_iAllowDynamic=(INDEX)1;
persistent extern user INDEX shd_bDynamicMipmaps=(INDEX)1;
persistent extern user INDEX shd_iFiltering=(INDEX)3;
persistent extern user INDEX shd_iDithering=(INDEX)1;
persistent extern user FLOAT shd_tmFlushDelay=(FLOAT)30;
persistent extern user FLOAT shd_fCacheSize=(FLOAT)8;
persistent extern user INDEX shd_bCacheAll=(INDEX)0;
persistent extern user INDEX shd_bAllowFlats=(INDEX)1;
persistent extern INDEX shd_iForceFlats=(INDEX)0;
persistent extern user INDEX gfx_iLensFlareQuality=(INDEX)3;
persistent extern user INDEX wld_bTextureLayers=(INDEX)111;
persistent extern user INDEX wld_bRenderMirrors=(INDEX)1;
persistent extern user FLOAT wld_fEdgeOffsetI=(FLOAT)0;
persistent extern user FLOAT wld_fEdgeAdjustK=(FLOAT)1;
persistent extern user INDEX wld_iDetailRemovingBias=(INDEX)3;
persistent extern user INDEX wed_bUseBaseForReplacement=(INDEX)0;
persistent extern user INDEX tex_iHueShift=(INDEX)0;
persistent extern user FLOAT tex_fSaturation=(FLOAT)1;
persistent extern user INDEX shd_iHueShift=(INDEX)0;
persistent extern user FLOAT shd_fSaturation=(FLOAT)1;
persistent extern user INDEX gfx_iHueShift=(INDEX)0;
persistent extern user FLOAT gfx_fSaturation=(FLOAT)1;
persistent extern user FLOAT gfx_fBrightness=(FLOAT)0;
persistent extern user FLOAT gfx_fContrast=(FLOAT)1;
persistent extern user FLOAT gfx_fGamma=(FLOAT)1;
persistent extern user FLOAT gfx_fBiasR=(FLOAT)1;
persistent extern user FLOAT gfx_fBiasG=(FLOAT)1;
persistent extern user FLOAT gfx_fBiasB=(FLOAT)1;
persistent extern user INDEX gfx_iLevels=(INDEX)256;
persistent extern user INDEX gfx_iStereo=(INDEX)0;
persistent extern user INDEX gfx_bStereoInvert=(INDEX)0;
persistent extern user INDEX gfx_iStereoOffset=(INDEX)10;
persistent extern user FLOAT gfx_fStereoSeparation=(FLOAT)0.25;
persistent extern user FLOAT snd_fEarsDistance=(FLOAT)0.2;
persistent extern user FLOAT snd_fDelaySoundSpeed=(FLOAT)1e+10;
persistent extern user FLOAT snd_fDopplerSoundSpeed=(FLOAT)330;
persistent extern user FLOAT snd_fPanStrength=(FLOAT)0.1;
persistent extern user FLOAT snd_fLRFilter=(FLOAT)3;
persistent extern user FLOAT snd_fBFilter=(FLOAT)5;
persistent extern user FLOAT snd_fUFilter=(FLOAT)1;
persistent extern user FLOAT snd_fDFilter=(FLOAT)3;
persistent extern user FLOAT snd_fSoundVolume=(FLOAT)1;
persistent extern user FLOAT snd_fMusicVolume=(FLOAT)1;
persistent extern user FLOAT snd_fNormalizer=(FLOAT)0.9;
persistent extern user FLOAT snd_tmMixAhead=(FLOAT)0.2;
persistent extern user INDEX snd_iInterface=(INDEX)2;
persistent extern user INDEX snd_iDevice=(INDEX)0;
persistent extern user INDEX snd_iFormat=(INDEX)1;
persistent extern user INDEX snd_iMaxExtraChannels=(INDEX)32;
persistent extern user INDEX snd_iMaxOpenRetries=(INDEX)3;
persistent extern user FLOAT snd_tmOpenFailDelay=(FLOAT)0.5;
persistent extern user FLOAT snd_fEAXPanning=(FLOAT)0;
persistent extern user CTString snd_strDeviceName="";
persistent extern user INDEX gam_bPretouch=(INDEX)0;
persistent extern user CTString cmd_cmdOnTick="";
persistent extern user CTString cmd_cmdOnChat="";
persistent extern user INDEX ent_bReportSpawnInWall=(INDEX)0;
persistent extern user FLOAT ser_tmSyncCheckFrequency=(FLOAT)1;
persistent extern user INDEX ser_iSyncCheckBuffer=(INDEX)60;
persistent extern user INDEX cli_bLerpActions=(INDEX)0;
persistent extern user INDEX cli_bReportPredicted=(INDEX)0;
persistent extern user INDEX net_iExactTimer=(INDEX)2;
persistent extern user CTString net_strLocalHost="";
persistent extern user CTString net_strLocationCode="";
persistent extern user INDEX ser_iExtensiveSyncCheck=(INDEX)0;
persistent extern user INDEX net_bLookupHostNames=(INDEX)0;
persistent extern user INDEX net_iCompression=(INDEX)1;
persistent extern user INDEX net_bReportPackets=(INDEX)0;
persistent extern user INDEX net_iMaxSendRetries=(INDEX)10;
persistent extern user FLOAT net_fSendRetryWait=(FLOAT)0.5;
persistent extern user INDEX net_bReportTraffic=(INDEX)0;
persistent extern user INDEX net_bReportICMPErrors=(INDEX)0;
persistent extern user INDEX net_bReportMiscErrors=(INDEX)0;
persistent extern user INDEX net_bLerping=(INDEX)1;
persistent extern user INDEX ser_bClientsMayPause=(INDEX)1;
persistent extern user INDEX ser_bEnumeration=(INDEX)1;
persistent extern user INDEX ser_bPingGameAgent=(INDEX)1;
persistent extern user FLOAT ser_tmKeepAlive=(FLOAT)0.1;
persistent extern user FLOAT ser_tmPingUpdate=(FLOAT)3;
persistent extern user INDEX ser_bWaitFirstPlayer=(INDEX)0;
persistent extern user INDEX ser_iMaxAllowedBPS=(INDEX)8000;
persistent extern user CTString ser_strIPMask="";
persistent extern user CTString ser_strNameMask="";
persistent extern user INDEX ser_bInverseBanning=(INDEX)0;
persistent extern user CTString ser_strMOTD="";
persistent extern user INDEX cli_bAutoAdjustSettings=(INDEX)0;
persistent extern user FLOAT cli_tmAutoAdjustThreshold=(FLOAT)2;
persistent extern user INDEX cli_bPrediction=(INDEX)0;
persistent extern user INDEX cli_iMaxPredictionSteps=(INDEX)10;
persistent extern user INDEX cli_bPredictIfServer=(INDEX)0;
persistent extern user INDEX cli_bPredictLocalPlayers=(INDEX)1;
persistent extern user INDEX cli_bPredictRemotePlayers=(INDEX)0;
persistent extern user FLOAT cli_fPredictEntitiesRange=(FLOAT)20;
persistent extern user FLOAT cli_fPredictionFilter=(FLOAT)0.5;
persistent extern user INDEX cli_iSendBehind=(INDEX)3;
persistent extern user INDEX cli_iPredictionFlushing=(INDEX)1;
persistent extern user INDEX cli_iBufferActions=(INDEX)1;
persistent extern user INDEX cli_iMaxBPS=(INDEX)4000;
persistent extern user INDEX cli_iMinBPS=(INDEX)100;
persistent extern user INDEX net_iGraphBuffer=(INDEX)100;
persistent extern user INDEX gam_iPrecachePolicy=(INDEX)1;
persistent extern user INDEX inp_iKeyboardReadingMethod=(INDEX)2;
persistent extern user INDEX inp_bAllowMouseAcceleration=(INDEX)1;
persistent extern user FLOAT inp_fMouseSensitivity=(FLOAT)1;
persistent extern user INDEX inp_bMousePrecision=(INDEX)0;
persistent extern user FLOAT inp_fMousePrecisionFactor=(FLOAT)4;
persistent extern user FLOAT inp_fMousePrecisionThreshold=(FLOAT)10;
persistent extern user FLOAT inp_fMousePrecisionTimeout=(FLOAT)0.25;
persistent extern user INDEX inp_bInvertMouse=(INDEX)0;
persistent extern user INDEX inp_bFilterMouse=(INDEX)0;
persistent extern user INDEX inp_bAllowPrescan=(INDEX)1;
persistent extern user INDEX inp_i2ndMousePort=(INDEX)0;
persistent extern user INDEX inp_bInvert2ndMouse=(INDEX)0;
persistent extern user INDEX inp_bFilter2ndMouse=(INDEX)0;
persistent extern user FLOAT inp_f2ndMouseSensitivity=(FLOAT)1;
persistent extern user INDEX inp_b2ndMousePrecision=(INDEX)0;
persistent extern user FLOAT inp_f2ndMousePrecisionFactor=(FLOAT)4;
persistent extern user FLOAT inp_f2ndMousePrecisionThreshold=(FLOAT)10;
persistent extern user FLOAT inp_f2ndMousePrecisionTimeout=(FLOAT)0.25;
persistent extern user INDEX inp_bMsgDebugger=(INDEX)0;
persistent extern user INDEX inp_iMButton4Up=(INDEX)131072;
persistent extern user INDEX inp_iMButton4Dn=(INDEX)131136;
persistent extern user INDEX inp_iMButton5Up=(INDEX)65536;
persistent extern user INDEX inp_iMButton5Dn=(INDEX)65568;
persistent extern user INDEX inp_ctJoysticksAllowed=(INDEX)8;
persistent extern user INDEX inp_bForceJoystickPolling=(INDEX)0;
persistent extern user INDEX inp_bAutoDisableJoysticks=(INDEX)0;
persistent extern user INDEX wed_bUseGenericTextureReplacement=(INDEX)0;
persistent extern user CTString ga_strServer="master1.42amsterdam.net";
persistent extern user CTString ga_strMSLegacy="42amsterdam.net";
persistent extern user INDEX ga_bMSLegacy=(INDEX)1;
persistent extern user FLOAT ctl_tmComputerDoubleClick=(FLOAT)0.5;
persistent extern user FLOAT ctl_fButtonRotationSpeedH=(FLOAT)300;
persistent extern user FLOAT ctl_fButtonRotationSpeedP=(FLOAT)150;
persistent extern user FLOAT ctl_fButtonRotationSpeedB=(FLOAT)150;
persistent extern user FLOAT ctl_fAxisStrafingModifier=(FLOAT)1;
persistent extern user FLOAT cli_fPredictPlayersRange=(FLOAT)0;
persistent extern user FLOAT cli_fPredictItemsRange=(FLOAT)3;
persistent extern user FLOAT cli_tmPredictFoe=(FLOAT)10;
persistent extern user FLOAT cli_tmPredictAlly=(FLOAT)10;
persistent extern user FLOAT cli_tmPredictEnemy=(FLOAT)10;
persistent extern user INDEX hud_bShowLatency=(INDEX)0;
persistent extern user INDEX hud_iShowPlayers=(INDEX)-1;
persistent extern user INDEX hud_iSortPlayers=(INDEX)-1;
persistent extern user INDEX hud_bShowWeapon=(INDEX)1;
persistent extern user INDEX hud_bShowMessages=(INDEX)1;
persistent extern user FLOAT hud_fScaling=(FLOAT)1;
persistent extern user FLOAT hud_fOpacity=(FLOAT)0.9;
persistent extern user FLOAT hud_tmWeaponsOnScreen=(FLOAT)3;
persistent extern user FLOAT hud_tmLatencySnapshot=(FLOAT)1;
persistent extern user FLOAT plr_fBreathingStrength=(FLOAT)0;
wpn_fRecoilSpeed[0]=(FLOAT)0;
wpn_fRecoilSpeed[1]=(FLOAT)0;
wpn_fRecoilSpeed[2]=(FLOAT)0;
wpn_fRecoilSpeed[3]=(FLOAT)0;
wpn_fRecoilSpeed[4]=(FLOAT)0;
wpn_fRecoilSpeed[5]=(FLOAT)0;
wpn_fRecoilSpeed[6]=(FLOAT)0;
wpn_fRecoilSpeed[7]=(FLOAT)0;
wpn_fRecoilSpeed[8]=(FLOAT)0;
wpn_fRecoilSpeed[9]=(FLOAT)0;
wpn_fRecoilSpeed[10]=(FLOAT)0;
wpn_fRecoilSpeed[11]=(FLOAT)0;
wpn_fRecoilSpeed[12]=(FLOAT)0;
wpn_fRecoilSpeed[13]=(FLOAT)0;
wpn_fRecoilSpeed[14]=(FLOAT)0;
wpn_fRecoilSpeed[15]=(FLOAT)0;
wpn_fRecoilSpeed[16]=(FLOAT)0;
wpn_fRecoilLimit[0]=(FLOAT)0;
wpn_fRecoilLimit[1]=(FLOAT)0;
wpn_fRecoilLimit[2]=(FLOAT)0;
wpn_fRecoilLimit[3]=(FLOAT)0;
wpn_fRecoilLimit[4]=(FLOAT)0;
wpn_fRecoilLimit[5]=(FLOAT)0;
wpn_fRecoilLimit[6]=(FLOAT)0;
wpn_fRecoilLimit[7]=(FLOAT)0;
wpn_fRecoilLimit[8]=(FLOAT)0;
wpn_fRecoilLimit[9]=(FLOAT)0;
wpn_fRecoilLimit[10]=(FLOAT)0;
wpn_fRecoilLimit[11]=(FLOAT)0;
wpn_fRecoilLimit[12]=(FLOAT)0;
wpn_fRecoilLimit[13]=(FLOAT)0;
wpn_fRecoilLimit[14]=(FLOAT)0;
wpn_fRecoilLimit[15]=(FLOAT)0;
wpn_fRecoilLimit[16]=(FLOAT)0;
wpn_fRecoilDampUp[0]=(FLOAT)0;
wpn_fRecoilDampUp[1]=(FLOAT)0;
wpn_fRecoilDampUp[2]=(FLOAT)0;
wpn_fRecoilDampUp[3]=(FLOAT)0;
wpn_fRecoilDampUp[4]=(FLOAT)0;
wpn_fRecoilDampUp[5]=(FLOAT)0;
wpn_fRecoilDampUp[6]=(FLOAT)0;
wpn_fRecoilDampUp[7]=(FLOAT)0;
wpn_fRecoilDampUp[8]=(FLOAT)0;
wpn_fRecoilDampUp[9]=(FLOAT)0;
wpn_fRecoilDampUp[10]=(FLOAT)0;
wpn_fRecoilDampUp[11]=(FLOAT)0;
wpn_fRecoilDampUp[12]=(FLOAT)0;
wpn_fRecoilDampUp[13]=(FLOAT)0;
wpn_fRecoilDampUp[14]=(FLOAT)0;
wpn_fRecoilDampUp[15]=(FLOAT)0;
wpn_fRecoilDampUp[16]=(FLOAT)0;
wpn_fRecoilDampDn[0]=(FLOAT)0;
wpn_fRecoilDampDn[1]=(FLOAT)0;
wpn_fRecoilDampDn[2]=(FLOAT)0;
wpn_fRecoilDampDn[3]=(FLOAT)0;
wpn_fRecoilDampDn[4]=(FLOAT)0;
wpn_fRecoilDampDn[5]=(FLOAT)0;
wpn_fRecoilDampDn[6]=(FLOAT)0;
wpn_fRecoilDampDn[7]=(FLOAT)0;
wpn_fRecoilDampDn[8]=(FLOAT)0;
wpn_fRecoilDampDn[9]=(FLOAT)0;
wpn_fRecoilDampDn[10]=(FLOAT)0;
wpn_fRecoilDampDn[11]=(FLOAT)0;
wpn_fRecoilDampDn[12]=(FLOAT)0;
wpn_fRecoilDampDn[13]=(FLOAT)0;
wpn_fRecoilDampDn[14]=(FLOAT)0;
wpn_fRecoilDampDn[15]=(FLOAT)0;
wpn_fRecoilDampDn[16]=(FLOAT)0;
wpn_fRecoilOffset[0]=(FLOAT)0;
wpn_fRecoilOffset[1]=(FLOAT)0;
wpn_fRecoilOffset[2]=(FLOAT)0;
wpn_fRecoilOffset[3]=(FLOAT)0;
wpn_fRecoilOffset[4]=(FLOAT)0;
wpn_fRecoilOffset[5]=(FLOAT)0;
wpn_fRecoilOffset[6]=(FLOAT)0;
wpn_fRecoilOffset[7]=(FLOAT)0;
wpn_fRecoilOffset[8]=(FLOAT)0;
wpn_fRecoilOffset[9]=(FLOAT)0;
wpn_fRecoilOffset[10]=(FLOAT)0;
wpn_fRecoilOffset[11]=(FLOAT)0;
wpn_fRecoilOffset[12]=(FLOAT)0;
wpn_fRecoilOffset[13]=(FLOAT)0;
wpn_fRecoilOffset[14]=(FLOAT)0;
wpn_fRecoilOffset[15]=(FLOAT)0;
wpn_fRecoilOffset[16]=(FLOAT)0;
wpn_fRecoilFactorP[0]=(FLOAT)0;
wpn_fRecoilFactorP[1]=(FLOAT)0;
wpn_fRecoilFactorP[2]=(FLOAT)0;
wpn_fRecoilFactorP[3]=(FLOAT)0;
wpn_fRecoilFactorP[4]=(FLOAT)0;
wpn_fRecoilFactorP[5]=(FLOAT)0;
wpn_fRecoilFactorP[6]=(FLOAT)0;
wpn_fRecoilFactorP[7]=(FLOAT)0;
wpn_fRecoilFactorP[8]=(FLOAT)0;
wpn_fRecoilFactorP[9]=(FLOAT)0;
wpn_fRecoilFactorP[10]=(FLOAT)0;
wpn_fRecoilFactorP[11]=(FLOAT)0;
wpn_fRecoilFactorP[12]=(FLOAT)0;
wpn_fRecoilFactorP[13]=(FLOAT)0;
wpn_fRecoilFactorP[14]=(FLOAT)0;
wpn_fRecoilFactorP[15]=(FLOAT)0;
wpn_fRecoilFactorP[16]=(FLOAT)0;
wpn_fRecoilFactorZ[0]=(FLOAT)0;
wpn_fRecoilFactorZ[1]=(FLOAT)0;
wpn_fRecoilFactorZ[2]=(FLOAT)0;
wpn_fRecoilFactorZ[3]=(FLOAT)0;
wpn_fRecoilFactorZ[4]=(FLOAT)0;
wpn_fRecoilFactorZ[5]=(FLOAT)0;
wpn_fRecoilFactorZ[6]=(FLOAT)0;
wpn_fRecoilFactorZ[7]=(FLOAT)0;
wpn_fRecoilFactorZ[8]=(FLOAT)0;
wpn_fRecoilFactorZ[9]=(FLOAT)0;
wpn_fRecoilFactorZ[10]=(FLOAT)0;
wpn_fRecoilFactorZ[11]=(FLOAT)0;
wpn_fRecoilFactorZ[12]=(FLOAT)0;
wpn_fRecoilFactorZ[13]=(FLOAT)0;
wpn_fRecoilFactorZ[14]=(FLOAT)0;
wpn_fRecoilFactorZ[15]=(FLOAT)0;
wpn_fRecoilFactorZ[16]=(FLOAT)0;
persistent extern user FLOAT plr_fFOV=(FLOAT)90;
persistent extern user FLOAT plr_fFrontClipDistance=(FLOAT)0.25;
persistent extern user INDEX plr_bRenderPicked=(INDEX)0;
persistent extern user INDEX plr_bRenderPickedParticles=(INDEX)0;
persistent extern user INDEX plr_bOnlySam=(INDEX)0;
persistent extern user INDEX ent_bReportBrokenChains=(INDEX)0;
persistent extern user FLOAT ent_tmMentalIn=(FLOAT)0.5;
persistent extern user FLOAT ent_tmMentalOut=(FLOAT)0.75;
persistent extern user FLOAT ent_tmMentalFade=(FLOAT)0.5;
persistent extern user CTString plr_strLastLevel="";
persistent extern user INDEX hud_bCrosshairFixed=(INDEX)0;
persistent extern user INDEX hud_bCrosshairColoring=(INDEX)1;
persistent extern user FLOAT hud_fCrosshairScale=(FLOAT)1;
persistent extern user FLOAT hud_fCrosshairRatio=(FLOAT)0.5;
persistent extern user FLOAT hud_fCrosshairOpacity=(FLOAT)1;
persistent extern user INDEX hud_bShowPlayerName=(INDEX)1;
persistent extern user INDEX hud_bShowCoords=(INDEX)0;
persistent extern user FLOAT plr_tmSnoopingTime=(FLOAT)1;
persistent extern user FLOAT plr_tmSnoopingDelay=(FLOAT)1;
persistent extern INDEX sam_bFullScreen=(INDEX)1;
persistent extern INDEX sam_iScreenSizeI=(INDEX)1920;
persistent extern INDEX sam_iScreenSizeJ=(INDEX)1080;
persistent extern INDEX sam_iDisplayDepth=(INDEX)0;
persistent extern INDEX sam_iDisplayAdapter=(INDEX)0;
persistent extern INDEX sam_iGfxAPI=(INDEX)0;
persistent extern INDEX sam_bFirstStarted=(INDEX)0;
persistent extern INDEX sam_bAutoAdjustAudio=(INDEX)1;
persistent extern user INDEX sam_bWideScreen=(INDEX)0;
persistent extern user FLOAT sam_fPlayerOffset=(FLOAT)0;
persistent extern user INDEX sam_bAutoPlayDemos=(INDEX)1;
persistent extern user INDEX sam_iMaxFPSActive=(INDEX)500;
persistent extern user INDEX sam_iMaxFPSInactive=(INDEX)10;
persistent extern user INDEX sam_bPauseOnMinimize=(INDEX)1;
persistent extern user FLOAT sam_tmDisplayModeReport=(FLOAT)5;
persistent extern user CTString sam_strNetworkSettings="";
persistent extern user CTString sam_strIntroLevel="Levels\\Intro.wld";
persistent extern user CTString sam_strGameName="serioussamfe";
persistent extern INDEX sam_bShowAllLevels=(INDEX)0;
persistent extern INDEX sam_bMentalActivated=(INDEX)0;
persistent extern user INDEX sam_iVideoSetup=(INDEX)3;
persistent extern user INDEX hud_bShowTime=(INDEX)0;
persistent extern user INDEX hud_bShowClock=(INDEX)0;
persistent extern user INDEX dem_iProfileRate=(INDEX)5;
persistent extern user INDEX hud_bShowNetGraph=(INDEX)0;
persistent extern user FLOAT gam_fManaTransferFactor=(FLOAT)0.5;
persistent extern user FLOAT gam_fExtraEnemyStrength=(FLOAT)0;
persistent extern user FLOAT gam_fExtraEnemyStrengthPerPlayer=(FLOAT)0;
persistent extern user INDEX gam_iInitialMana=(INDEX)100;
persistent extern user INDEX gam_iScoreLimit=(INDEX)100000;
persistent extern user INDEX gam_iFragLimit=(INDEX)20;
persistent extern user INDEX gam_iTimeLimit=(INDEX)0;
persistent extern user INDEX gam_ctMaxPlayers=(INDEX)8;
persistent extern user INDEX gam_bWaitAllPlayers=(INDEX)0;
persistent extern user INDEX gam_bFriendlyFire=(INDEX)0;
persistent extern user INDEX gam_bPlayEntireGame=(INDEX)1;
persistent extern user INDEX gam_bWeaponsStay=(INDEX)1;
persistent extern user INDEX gam_bAmmoStays=(INDEX)1;
persistent extern user INDEX gam_bHealthArmorStays=(INDEX)1;
persistent extern user INDEX gam_bAllowHealth=(INDEX)1;
persistent extern user INDEX gam_bAllowArmor=(INDEX)1;
persistent extern user INDEX gam_bInfiniteAmmo=(INDEX)0;
persistent extern user INDEX gam_bRespawnInPlace=(INDEX)1;
persistent extern user INDEX gam_iCredits=(INDEX)-1;
persistent extern user FLOAT gam_tmSpawnInvulnerability=(FLOAT)3;
persistent extern user INDEX gam_iBlood=(INDEX)2;
persistent extern user INDEX gam_bGibs=(INDEX)1;
persistent extern user INDEX gam_bUseExtraEnemies=(INDEX)1;
persistent extern user INDEX gam_iStartDifficulty=(INDEX)1;
persistent extern user INDEX gam_iStartMode=(INDEX)0;
persistent extern user CTString gam_strGameAgentExtras="";
persistent extern user CTString gam_strCustomLevel="Levels/01_Hatshepsut.wld";
persistent extern user CTString gam_strSessionName="Unnamed session";
persistent extern user CTString gam_strJoinAddress="serveraddress";
persistent extern user INDEX gam_bEnableAdvancedObserving=(INDEX)0;
persistent extern user FLOAT con_fHeightFactor=(FLOAT)0.5;
persistent extern user FLOAT con_tmLastLines=(FLOAT)5;
persistent extern CTString sam_strLastRenderer="none";
persistent extern INDEX sam_iLastSetup=(INDEX)1;
